<import src='../template/template'  />

<template is="title" data='{{title:"view类组件"}}'></template>
<view class='container'>
  <!-- button -->
  <view class='item'>
    <view>1、button,除开微信的开放功能，button并没有什么特别之处，只是如果用图片做背景，还需要设置button :after的一个属性才能透明</view>
    <button size='mini' type='primary' loading='true' open-type="contact">按钮</button>
    <button type='warn' open-type='getUserInfo' bindgetuserinfo='getUserInfo' plain='plain'>getUserInfo</button>
  </view>

  <!-- checkbox -->
  <view class='item'>
    <view>2、checkbox,多选框。</view>
    <checkbox-group>
      <checkbox value='a'>aaaaa</checkbox>
      <checkbox value='b'>bbbbb</checkbox>
      <checkbox value='c' checked='checked'>ccccc</checkbox>
      <checkbox value='d'>ddddd</checkbox>
    </checkbox-group>

    <checkbox-group class='checkbox_group' bindchange='checkbox_change'>
      <block wx:for='{{checkboxData}}' wx:key='*this'>
        <label for='{{item.id}}' class='checkbox_label{{item.isChecked?"_checked":""}}'><view><icon wx:if='{{item.isChecked}}' type='success' size='18'></icon>{{item.value}}</view></label>
        <checkbox id='{{item.id}}' value='{{item.id}}' hidden='hidden' checked='{{item.isChecked?"checked":""}}'></checkbox>
      </block>
    </checkbox-group>
  </view>

  <!-- form -->
  <view class='item'>
    <view>4、form。点表单中button formType为submit组件可以提交value值</view> 
    <view class='form_container'>
    <form bindsubmit='form_submit' class='form_class' bindreset='form_reset'>
      <view class='form_class'>
        <!-- 用户名 -->
        <view class='section'>
          <view class='section_title'>用户名：</view>
          <input class='section_content' name='username' placeholder='{{placeHolder}}'></input>
        </view>

        <!-- 性别 -->
        <view class='section'>
          <view class='section_title'>性 别：</view>
          <view class='section_content'>
            <radio-group name='sex'>
              <radio value='man'>男</radio>
              <radio value='women'>女</radio>
            </radio-group>
          </view>
        </view>

        <!-- 出战佣兵 -->
        <view class='section'>
          <view class='section_title'>出战佣兵：</view>
          <view class='section_content'>
            <checkbox-group name='helper'>
              <checkbox value='刘备'>刘备</checkbox>
              <checkbox value='孙权'>孙权</checkbox>
              <checkbox value='曹操'>曹操</checkbox>
            </checkbox-group>
          </view>
        </view>

        <!-- 音效 -->
        <view class='section'>
          <view class='section_title'>开启音效：</view>
          <view class='section_content'>
            <switch name='music' checked='checked'></switch>
          </view>
        </view>

        <view class='button_section'>
            <button size='mini' type='primary' form-type='submit'>提交</button>
            <button size='mini' type='primary' form-type='reset'>重置</button>
        </view>
      </view>
    </form>
    </view>  
  </view>

   <!--input  -->
  <view class='item'>
    <view>5、input输入框，type不同所对应的键盘不同。</view>
    <input password='true' placeholder="mark"></input>
    <input type='idcard' placeholder="请输入身份证"></input>
  </view>

   <!--radio label -->
  <view class='item'>
    <view>6、radio单选只有value、checked、color三个属性，label标签可以和checkbox、radio、button、switch配合用。可以用来更改默认的样式。</view>
    <!-- 普通的radio -->
    <radio-group>
      <radio color='red'>中国</radio>
      <radio>美国</radio>
      <radio>巴西</radio>
    </radio-group>

    <!-- 配合label标签，自定义样式 -->
     <radio-group bindchange='labelChange'>
      <view wx:for='{{radioData}}' wx:key='*this'>
      <label class='radio_item'>
        <radio hidden='hidden' id='{{item.id}}' value='{{item.id}}' checked='{{item.isChecked}}'></radio>
        <view class='radio_icon' style='opacity:{{item.isChecked ? 1: 0}}'></view>
        <view>{{item.value}}</view>
      </label>
      </view>
    </radio-group>
  </view>

 <!--picker  -->
  <view class='item'>
    <view>7、picker滚动选择器。</view>
    <!-- 一般选择器 -->
    <picker mode='selector' range='{{pickerData}}' value='{{index}}' bindchange='bindPickerChange' class='picker_section'>
      <view class='picker'>当前选择：{{pickerData[index]}}</view>
    </picker>

    <!-- 多列选择器 -->
    <picker mode='multiSelector' range='{{multiArray}}' value='{{multiIndex}}' bindchange='bindMultiPickerChange' class='picker_section'>
      <view class='picker'>当前选择：{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}，{{multiArray[2][multiIndex[2]]}}，{{multiArray[3][multiIndex[3]]}}</view>
    </picker>

     <!-- 地区选择 -->
    <picker mode='region' value='{{region}}' bindchange='bindRegionChange' custom-item='全部' class='picker_section'>
      <view class='picker'>当前选择：{{region[0]}}，{{region[1]}}，{{region[2]}}</view>
    </picker>
  </view>

  <!--picker-view  -->
  <view class='item'>
    <view>8、picker-view。用for循环初始化数据的时候，直接js页面，不放在onload方法里面</view>
    <view style='width:100%' class='picker_content'>选择的年份是：{{year}}</view>
    <picker-view style='width:100%;height:300rpx;' indicator-style='height:50rpx;' value='{{value}}' bindchange='pickerViewChange' mask-style='mask_style'>
      <picker-view-column>
        <view wx:for='{{years}}' wx:key='*this' style="line-height: 50px" >{{item}}</view>
      </picker-view-column>
    </picker-view>
  </view>

  <!-- slider滑动选择器 -->
  <view class='item'>
    <view>9、slider滑动选择器。</view>
    <slider show-value='true' step='.1' backgroundColor='gray' activeColor='black' block-size='18' block-color='green' bindchange='sliderChange' bindchanging='sliderChanging'></slider>
    <view class='progress'>进度是：{{progress}}</view>
  </view>

  <!-- textview多行输入框 -->
  <view class='item'>
    <view>10、textview。</view>
    <textarea class='textarea'></textarea>
  </view>
</view>